# Copyright 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

if (is_ios) {
  import("//build/config/ios/deployment_target.gni")
} else if (is_tvos) {
  import("//build/config/tvos/deployment_target.gni")
} else if (is_mac) {
  import("//build/config/mac/mac_sdk.gni")
}

template("storyboards") {
  assert(defined(invoker.sources),
         "sources must be defined for storyboard ($target_name)")

  _compile_target = target_name + "_compile"
  _compile_output =
      "$target_out_dir/$_compile_target/{{source_name_part}}.storyboardc"

  action_foreach(_compile_target) {
    script = "//build/apple/script/compile_storyboard.py"
    sources = invoker.sources
    outputs = [ _compile_output ]
    deployment_target = ""
    if (is_ios) {
      deployment_target = ios_deployment_target
    } else if (is_tvos) {
      deployment_target = tvos_deployment_target
    } else if (is_mac) {
      deployment_target = mac_deployment_target
    }
    args = [
      "{{source}}",
      "-o=" + rebase_path(_compile_output, root_build_dir),
      "--minimum-deployment-target=$deployment_target",
      "-p=${target_os}",
    ]
  }

  bundle_data(target_name) {
    public_deps = [ ":$_compile_target" ]
    sources = get_target_outputs(":$_compile_target")
    if (is_ios || is_tvos) {
      outputs = [ "{{bundle_root_dir}}/Base.lproj/{{source_file_part}}" ]
    } else if (is_mac) {
      outputs = [ "{{bundle_resources_dir}}/Base.lproj/{{source_file_part}}" ]
    }
  }
}
