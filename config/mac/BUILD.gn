# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/apple/templates/merge_plist.gni")
import("//build/config/mac/sdk_info.gni")
import("//build/config/sysroot.gni")
import("//build/toolchain/clang.gni")

merge_plist("compiler_plist") {
  substitutions = {
    COMPILER_NAME = sdk_info.compiler
    MACOS_BUILD = sdk_info.macos_build
    PLATFORM_BUILD = sdk_info.sdk_build
    PLATFORM_DISPLAY_NAME = "MacOSX"
    PLATFORM_NAME = "macosx"
    PLATFORM_VERSION = sdk_info.sdk_version
    SDK_BUILD = sdk_info.sdk_build
    SDK_NAME = sdk_info.sdk
    XCODE_BUILD = sdk_info.xcode_build
    XCODE_VERSION = sdk_info.xcode_version
  }

  output = "$target_out_dir/compiler_plist/Info.plist"
  plists = [ "//build/apple/resources/compiler-Info.plist" ]
}

config("sdk") {
  common_flags = [ "-stdlib=libc++" ]

  cflags_cc = common_flags
  cflags_objcc = common_flags
}

# On Mac, this is used for everything except static libraries.
config("mac_dynamic_flags") {
  ldflags = [
    "-Wl,-search_paths_first",
    "-L.",

    # Path for embed frameworks
    "-Wl,-rpath,@executable_path/../Frameworks",

    # Path for loading shared libraries for unbundled binaries.
    "-Wl,-rpath,@loader_path/.",

    # Path for loading shared libraries for bundled binaries. Get back from
    # Binary.app/Contents/MacOS.
    "-Wl,-rpath,@loader_path/../../..",
  ]

  if (use_flutter_cxx || !use_xcode) {
    ldflags += [ "-L../../buildtools/llvm/lib" ]
  }
}

# On Mac, this is used only for executables.
config("mac_executable_flags") {
  ldflags = [ "-Wl,-pie" ]  # Position independent.
}
